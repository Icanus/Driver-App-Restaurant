<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="DineDash.Views.SignUpPage"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" 
             xmlns:abstractions="clr-namespace:Plugin.CrossPlatformTintedImage.Abstractions;assembly=Plugin.CrossPlatformTintedImage.Abstractions" 
             xmlns:controls="clr-namespace:DineDash.Controls" 
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit" 
             xmlns:forms="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms" 
             xmlns:local="clr-namespace:DineDash.Behaviors" 
             xmlns:pv="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
             xmlns:md="clr-namespace:DineDash.MaterialDesign"
             xmlns:res="clr-namespace:DineDash.Resources"
             ios:Page.UseSafeArea="true"
             x:Name="Page"
             NavigationPage.HasNavigationBar="False"
             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark},
                Light={StaticResource BackgroundColorLight}}">
    <AbsoluteLayout x:Name="PageLayout">
        <RelativeLayout>

            <ScrollView RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                        Property=Width, Factor=1}"
                    RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                        Property=Height, Factor=1}">

                <StackLayout Padding="30,30,30,30" Spacing="10">

                    <Grid HorizontalOptions="FillAndExpand">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80*"/>
                            <ColumnDefinition Width="20*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Style="{StaticResource BoldTitlePrimaryLabelStyle}" Text="{x:Static res:AppResources.CreateAccount}" VerticalOptions="Center"/>

                        <abstractions:TintedImage
                                        VerticalOptions="Center"
                                        HorizontalOptions="End"
                                        Grid.Column="1"
                                         BackgroundColor="Transparent">

                            <abstractions:TintedImage.Source>

                                <FontImageSource Glyph="{x:Static md:Icons.Close}"
                                                     FontFamily="Material"
                                                     Color="WhiteSmoke"
                                                     Size="30" />

                            </abstractions:TintedImage.Source>
                            <abstractions:TintedImage.GestureRecognizers>
                                <TapGestureRecognizer NumberOfTapsRequired="1"
                                        Command="{Binding CloseCommand}"
                                        CommandParameter="{Binding .}" />
                            </abstractions:TintedImage.GestureRecognizers>
                        </abstractions:TintedImage>
                    </Grid>
                    <BoxView Margin="10" BackgroundColor="#d3d3d3" HeightRequest="1"/>
                    <Label Text="{x:Static res:AppResources.FullnameRequired}"
                       Style="{StaticResource SmallTertiaryLabelStyle}" />

                    <controls:CustomEntry BorderColor="#d3d3d3" Padding="10" BorderRadius="5" BorderWidth="1" Placeholder="Enter full name" ReturnType="Next" Text="{Binding FullName, Mode=TwoWay}" >
                        <controls:CustomEntry.Behaviors>
                            <xct:TextValidationBehavior MinimumLength="3" MaximumLength="100"
                            DecorationFlags="Trim"
                            InvalidStyle="{StaticResource InvalidEntryStyle}"/>
                        </controls:CustomEntry.Behaviors>
                    </controls:CustomEntry>

                    <Label Text="{x:Static res:AppResources.EmailRequired}"
                       Style="{StaticResource SmallTertiaryLabelStyle}" />
                    <controls:CustomEntry BorderColor="#d3d3d3"  Padding="10" BorderRadius="5" Placeholder="Enter Email Address" ReturnType="Next" Text="{Binding Email, Mode=TwoWay}" >
                        <controls:CustomEntry.Behaviors>
                            <xct:EmailValidationBehavior
                            x:Name="EmailValidator"
                            DecorationFlags="Trim"
                            InvalidStyle="{StaticResource InvalidEntryStyle}"/>
                        </controls:CustomEntry.Behaviors>
                    </controls:CustomEntry>

                    <Label Text="{x:Static res:AppResources.PhoneRequired}"
                       Style="{StaticResource SmallTertiaryLabelStyle}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Frame
                            Grid.Column="0"
                    CornerRadius="10"
                    VerticalOptions="Center"
                    HorizontalOptions="FillAndExpand"
                    Padding="0"
                            BorderColor="#d3d3d3"
                            BackgroundColor="Transparent"
                    IsClippedToBounds="True">
                            <StackLayout Orientation="Horizontal"
                                 HorizontalOptions="FillAndExpand"
                                 VerticalOptions="FillAndExpand">
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ShowPopupCommand}"/>
                                </StackLayout.GestureRecognizers>
                                <forms:SvgCachedImage
                            HeightRequest="26"
                            Source="{Binding SelectedCountry.FlagUrl}"
                            VerticalOptions="CenterAndExpand"
                            WidthRequest="26" 
                            Margin="20,10,0,10"/>
                                <Label Text="{Binding SelectedCountry.CountryCode, StringFormat='(+{0})'}"
                               VerticalTextAlignment="Center"
                                TextColor="{StaticResource TertiaryTextColorDark}"
                               Margin="20,0"
                               HorizontalTextAlignment="End"
                               HorizontalOptions="EndAndExpand"
                               VerticalOptions="CenterAndExpand"/>
                            </StackLayout>
                        </Frame>
                        <controls:CustomEntry Grid.Column="1" BorderColor="#d3d3d3"  Padding="10" BorderRadius="5" Placeholder="Enter Phone number" Keyboard="Numeric" ReturnType="Next" Text="{Binding Phone , Mode=TwoWay}" />
                    </Grid>

                    <Label Text="{x:Static res:AppResources.Gender}"
                       Style="{StaticResource SmallTertiaryLabelStyle}" />
                    <Grid ColumnDefinitions="*, *"
                      RowDefinitions="*"
                      RowSpacing="0"
                      ColumnSpacing="20">
                        <RadioButton Grid.Column="0"
                           Value="Male" Content="Male" IsChecked="True" Style="{StaticResource SmallTertiaryLabelStyle}">
                            <RadioButton.Behaviors>
                                <local:EventToCommandBehavior EventName="CheckedChanged" Command="{Binding Source={x:Reference Page}, Path=BindingContext.RadioCommand}" CommandParameter="Male"/>
                            </RadioButton.Behaviors>
                        </RadioButton>
                        <RadioButton Grid.Column="1"
                           Value="Female" Content="Female" Style="{StaticResource SmallTertiaryLabelStyle}">
                            <RadioButton.Behaviors>
                                <local:EventToCommandBehavior EventName="CheckedChanged" Command="{Binding Source={x:Reference Page}, Path=BindingContext.RadioCommand}" CommandParameter="Female"/>
                            </RadioButton.Behaviors>
                        </RadioButton>

                    </Grid>

                    <Label Text="{x:Static res:AppResources.PasswordRequired}"
                           Style="{StaticResource SmallTertiaryLabelStyle}" />
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <controls:CustomEntry BorderColor="#d3d3d3" IsPassword="{Binding IsPassword}" Padding="10" BorderRadius="5"  Grid.Row="0"
                                   x:Name="PasswordEntry"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2" Placeholder="Enter Password" ReturnType="Next"
                           Text="{Binding Password, Mode=TwoWay}" />
                        <ImageButton Source="eye_hidden"
                               Command="{Binding ToggleIsPassword}"
                               WidthRequest="24" VerticalOptions="Center" TranslationX="-10"
                               BackgroundColor="Transparent"
                               Grid.Row="0"
                               Grid.Column="1"
                               Grid.ColumnSpan="1"
                               HorizontalOptions="End">
                            <ImageButton.Triggers>
                                <DataTrigger TargetType="ImageButton" Binding="{Binding IsPassword}" Value="True" >
                                    <Setter Property="Source" Value="eye_icon" />
                                </DataTrigger>
                            </ImageButton.Triggers>
                        </ImageButton>
                    </Grid>

                    <Label Grid.Column="1"
                           Text="{x:Static res:AppResources.ConfirmPasswordRequired}"
                           Style="{StaticResource SmallTertiaryLabelStyle}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <controls:CustomEntry x:Name="ConfirmPasswordEntry"
                                   Grid.Column="0"
                                   Grid.Row="0"
                                   Grid.ColumnSpan="2" BorderColor="#d3d3d3" IsPassword="{Binding IsConfirmPassword}" Padding="10" BorderRadius="5" Placeholder="Enter Confirm" ReturnType="Done"
                                   Text="{Binding ConfirmPassword, Mode=TwoWay}" />
                        <ImageButton Source="eye_hidden"
                               Command="{Binding ToggleIsConfirmPassword}"
                               WidthRequest="24" VerticalOptions="Center" TranslationX="-10"
                               BackgroundColor="Transparent"
                               Grid.Row="0"
                               Grid.Column="1"
                               Grid.ColumnSpan="1"
                               HorizontalOptions="End">
                            <ImageButton.Triggers>
                                <DataTrigger TargetType="ImageButton" Binding="{Binding IsConfirmPassword}" Value="True" >
                                    <Setter Property="Source" Value="eye_icon" />
                                </DataTrigger>
                            </ImageButton.Triggers>
                        </ImageButton>
                    </Grid>

                    <Label Text="{x:Static res:AppResources.ReferralCode}"
                       Style="{StaticResource SmallTertiaryLabelStyle}" IsVisible="False"/>
                    <controls:CustomEntry IsVisible="False" BorderColor="#d3d3d3"  Padding="10" BorderRadius="5" Placeholder="Referral Code" ReturnType="Next" Text="{Binding ReferralCode, Mode=TwoWay}" >
                    </controls:CustomEntry>


                    <Label HorizontalOptions="FillAndExpand"
                       Margin="0, 10, 0, 0"
                       Style="{StaticResource MediumSecondaryLabelStyle}">

                        <Label.FormattedText>

                            <FormattedString>

                                <Span Text="{x:Static res:AppResources.ByClickingSignUp}" />

                                <Span Text="{x:Static res:AppResources.TermsConditions}"
                                  TextColor="{AppThemeBinding Light={StaticResource PrimaryColorLight},
                                        Dark={StaticResource PrimaryColorDark}}"
                                  TextDecorations="Underline">

                                    <Span.GestureRecognizers>

                                        <TapGestureRecognizer NumberOfTapsRequired="1"
                                                          Command="{Binding TermsCommand}" />

                                    </Span.GestureRecognizers>

                                </Span>

                            </FormattedString>

                        </Label.FormattedText>

                    </Label>

                    <ContentView HeightRequest="134"/>


                </StackLayout>

            </ScrollView>

            <pv:PancakeView Style="{StaticResource ButtonPanelStyle}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression
                            Type=RelativeToParent, Property=Width, Factor=1}"
                        RelativeLayout.YConstraint="{ConstraintExpression
                            Type=RelativeToParent, Property=Height, Factor=1,
                            Constant=-134}">

                <pv:PancakeView.Shadow>
                    <pv:DropShadow />
                </pv:PancakeView.Shadow>

                <StackLayout Spacing="20">

                    <Label HorizontalTextAlignment="Center"
                       HorizontalOptions="FillAndExpand"
                       Style="{StaticResource MediumSecondaryLabelStyle}"
                       HeightRequest="24">

                        <Label.FormattedText>

                            <FormattedString>

                                <Span Text="{x:Static res:AppResources.AlreadyHaveAccount}" />

                                <Span Text="{x:Static res:AppResources.LogIn}"
                                  TextColor="{AppThemeBinding Light={StaticResource PrimaryColorLight},
                                        Dark={StaticResource PrimaryColorDark}}"
                                  TextDecorations="Underline">

                                    <Span.GestureRecognizers>

                                        <TapGestureRecognizer NumberOfTapsRequired="1"
                                                          Command="{Binding LoginCommand}" />

                                    </Span.GestureRecognizers>

                                </Span>

                            </FormattedString>

                        </Label.FormattedText>

                    </Label>

                    <Button Style="{StaticResource PrimaryButtonStyle}"
                        Text="{x:Static res:AppResources.SignUp}"
                        Command="{Binding SignUpCommand}"
                        HeightRequest="50"/>

                </StackLayout>

            </pv:PancakeView>

        </RelativeLayout>
        <BoxView x:Name="Filter"
                     AbsoluteLayout.LayoutBounds="0,0,1,1"
                     AbsoluteLayout.LayoutFlags="All"
                     BackgroundColor="#d3d3d3"
                     IsVisible="{Binding IsBusy}"
                     Opacity="0.60" />
        <ActivityIndicator  IsRunning="True"
                            VerticalOptions="CenterAndExpand"
                            IsVisible="{Binding IsBusy}"
                            HorizontalOptions="CenterAndExpand"
                             AbsoluteLayout.LayoutBounds="0.5,0.5,0.5,0.5"
                                        AbsoluteLayout.LayoutFlags="All"/>
    </AbsoluteLayout>
</ContentPage>